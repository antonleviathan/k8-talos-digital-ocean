{
  "version": 4,
  "terraform_version": "1.1.7",
  "serial": 201,
  "lineage": "cc3c7fe7-87fc-e935-7b26-e7c620db7df2",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "local_file",
      "name": "controlplane",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true # Indicates whether to pull the machine config upon every boot.\n# Provides machine specific configuration options.\nmachine:\n    type: controlplane # Defines the role of the machine within the cluster.\n    token: b1byxv.w5ultb5aew1g20fb # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBLzd3WENPZFR6Vnp1OWpPRG52eEkwREFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qSXdOVEU0TURFeU1USXpXaGNOTXpJd05URTFNREV5TVRJeldqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUFnZk5TZ3p0S0NqYnVWemRtZFVuZUR1ZmZ1dFA5OGQ2R3VOCmRhUzQrL2srbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9uaC9PMUhQU2R4TlNIVApPN214cUJHRDQxSC9NQVVHQXl0bGNBTkJBUHRaeEZkM0tHRE9MSGI2bktjR1hFUXI0TFlTZnZWbFJwM3ZLNWVQCnFBRi9LUUJKeHQxTHU0ZWFYTHhheTQzZkF6L1RWTHFMVUlpZnBJbUpRaTdrSXd3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTVcyQjZabElINVYzdVMySlF6bjlIMTRyY2oxbURHY290WDJNazI1ekxFQwotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet: {}\n    # # The `image` field is an optional reference to an alternative kubelet image.\n    # image: ghcr.io/talos-systems/kubelet:v1.23.1\n\n    # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n    # clusterDNS:\n    #     - 10.96.0.10\n    #     - 169.254.2.53\n\n    # # The `extraArgs` field is used to provide additional flags to the kubelet.\n    # extraArgs:\n    #     key: value\n\n    # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n    # extraMounts:\n    #     - destination: /var/lib/example\n    #       type: bind\n    #       source: /var/lib/example\n    #       options:\n    #         - bind\n    #         - rshared\n    #         - rw\n\n    # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n    # nodeIP:\n    #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n    #     validSubnets:\n    #         - 10.0.0.0/8\n    #         - '!10.0.0.3/32'\n    #         - fdc7::/16\n\n    # Provides machine specific network configuration options.\n    network: {}\n    # # `interfaces` is used to define the network interface configuration.\n    # interfaces:\n    #     - interface: eth0 # The interface name.\n    #       # Assigns static IP addresses to the interface.\n    #       addresses:\n    #         - 192.168.2.0/24\n    #       # A list of routes associated with the interface.\n    #       routes:\n    #         - network: 0.0.0.0/0 # The route's network.\n    #           gateway: 192.168.2.1 # The route's gateway.\n    #           metric: 1024 # The optional metric for the route.\n    #       mtu: 1500 # The interface's MTU.\n    #       \n    #       # # Bond specific options.\n    #       # bond:\n    #       #     # The interfaces that make up the bond.\n    #       #     interfaces:\n    #       #         - eth0\n    #       #         - eth1\n    #       #     mode: 802.3ad # A bond option.\n    #       #     lacpRate: fast # A bond option.\n\n    #       # # Indicates if DHCP should be used to configure the interface.\n    #       # dhcp: true\n\n    #       # # DHCP specific options.\n    #       # dhcpOptions:\n    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n    #       # # Wireguard specific configuration.\n\n    #       # # wireguard server example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     listenPort: 51111 # Specifies a device's listening port.\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n    #       # # wireguard peer example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.\n    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n\n    #       # # Virtual (shared) IP address configuration.\n    #       # vip:\n    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.\n\n    # # Used to statically set the nameservers for the machine.\n    # nameservers:\n    #     - 8.8.8.8\n    #     - 1.1.1.1\n\n    # # Allows for extra entries to be added to the `/etc/hosts` file\n    # extraHostEntries:\n    #     - ip: 192.168.1.100 # The IP of the host.\n    #       # The host alias.\n    #       aliases:\n    #         - example\n    #         - example.domain.tld\n\n    # # Configures KubeSpan feature.\n    # kubespan:\n    #     enabled: true # Enable the KubeSpan feature.\n\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/sda # The disk used for installations.\n        image: ghcr.io/talos-systems/installer:v0.14.3 # Allows for supplying the image used to perform the installation.\n        bootloader: true # Indicates if a bootloader should be installed.\n        wipe: false # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n    \n    # # Provides machine specific contolplane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to partition, format and mount additional disks.\n\n    # # MachineDisks list example.\n    # disks:\n    #     - device: /dev/sdb # The name of the disk to use.\n    #       # A list of partitions to create on the disk.\n    #       partitions:\n    #         - mountpoint: /var/mnt/extra # Where to mount the partition.\n    #           \n    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n    #           # # Human readable representation.\n    #           # size: 100 MB\n    #           # # Precise value in bytes.\n    #           # size: 1073741824\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # Specifies time (NTP) servers to use for setting the system time.\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n\n    # # Used to configure the machine's container image registry mirrors.\n    # registries:\n    #     # Specifies mirror configuration for each registry.\n    #     mirrors:\n    #         ghcr.io:\n    #             # List of endpoints (URLs) for registry mirrors to use.\n    #             endpoints:\n    #                 - https://registry.insecure\n    #                 - https://ghcr.io/v2/\n    #     # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    #     config:\n    #         registry.insecure:\n    #             # The TLS configuration for the registry.\n    #             tls:\n    #                 insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #                 \n    #                 # # Enable mutual TLS authentication with the registry.\n    #                 # clientIdentity:\n    #                 #     crt: TFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVSklla05DTUhGLi4u\n    #                 #     key: TFMwdExTMUNSVWRKVGlCRlJESTFOVEU1SUZCU1NWWkJWRVVnUzBWWkxTMHRMUzBLVFVNLi4u\n    #             \n    #             # # The auth configuration for this registry.\n    #             # auth:\n    #             #     username: username # Optional registry authentication.\n    #             #     password: password # Optional registry authentication.\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n# Provides cluster specific configuration options.\ncluster:\n    id: KRpBFOXKOYFyWeKrWThhfujfzpZMN7ghUk8ecu4LYUA= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: nPrUis4++Ptk79og80oA1N+pgi/eT+i/XcZsW6NROLg= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://146.190.3.99:443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    clusterName: talos-k8s-digital-ocean-tutorial # Configures the cluster's name.\n    # Provides cluster specific network configuration options.\n    network:\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n        \n        # # The CNI used.\n        # cni:\n        #     name: custom # Name of CNI to use.\n        #     # URLs containing manifests to apply for the CNI.\n        #     urls:\n        #         - https://raw.githubusercontent.com/cilium/cilium/v1.8/install/kubernetes/quick-install.yaml\n    token: h02u4e.v4y18yrkaexyp0cg # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    aescbcEncryptionSecret: XT+oLHO+upE24vcIQt+OlmxF3zYFv39Hj2ghGY6k/Hs= # The key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUp0RGNkd2FCUWNoUWVDeGJWQS9FMHN3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNakExTVRnd01USXhNak5hRncwek1qQTFNVFV3TVRJeApNak5hTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVI2Q25kWjJJNzFUbFpmNW83YVZmRWFhMzBZSWN4UXlsWUdKWkJpTXczVTJFb0NqUE5QcDBrRGpGaHAKTnZhMEd1VXc5dmFmR2N5bzF2MkxqMUJFUXM4QW8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGRXBTcExMWTE5ZnFOOVNNSHppWFhHUFkrd1RqTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUMyLzJQb0gKU0pvbTdTdkEvN29PK1lUZkVUT0tNK2YwZWtybXJkMG5HZ0djQWlFQXFMcnY4UXpUbXZVK3c3dXVxeDFvTlFyWQpXNEk4Zmh2bFNyWlo1dG9pY3IwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSURMZ1BheEEzU0hKWGF1WFlqTXB5TExNMkN2MzBuQldnTHhDc0FyT0NEZzJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZWdwM1dkaU85VTVXWCthTzJsWHhHbXQ5R0NITVVNcFdCaVdRWWpNTjFOaEtBb3p6VDZkSgpBNHhZYVRiMnRCcmxNUGIybnhuTXFOYjlpNDlRUkVMUEFBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n    aggregatorCA:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQU9uRm44UHFTYS9rV3pjNUR6aVhDeTR3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU1qQTFNVGd3TVRJeE1qTmFGdzB6TWpBMU1UVXdNVEl4TWpOYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVI4Rk9lSS9LSEtxaXhCUmdEYkthbmtUTjYrZmJNK2crZmYzUU5jL05Lblp1cDZCcEhECkdZTStSQTk1bHNEQ0kreFZRS2x6d3k3M251VDdsUE5OVGZXVW8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGSy9XdU5xSS9lL2swNDdEWVlxM2k2dEtMb2JYTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRQ2VHb0dCcFk5M0R3WWw0aFQramRLNjdROVB2WkZqaDArcjdIVDlQR3BjdFFJZ05yMEVneWYzbXYrTFVsTFEKN1V6NFBqcFIvUUljTWtZUmZmUnZTSWFXTjdvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUpJQnJzOWdKck1RVTJ1WkxQQ2NIWmpsUkh4OU9CSlVVaGE2YzhhR1M3VVdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZkJUbmlQeWh5cW9zUVVZQTJ5bXA1RXpldm4yelBvUG4zOTBEWFB6U3AyYnFlZ2FSd3htRApQa1FQZVpiQXdpUHNWVUNwYzhNdTk1N2srNVR6VFUzMWxBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded private key for service account token generation.\n    serviceAccount:\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUF6QStIRnBrQjB1OUpWczRzbFUzcFl6a1BJbmpIdDZjR0NvcG9sNmJFOWpvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFL2JubWFKbWlzNklnYzhoVUtraGJTcmZmSWdCQ2Z6aC95UEpZSlBKRjVyOFg2RnV2Wmc2UQowbVRaZE1QY25OWFJIOGkydmxicjAzV1ovcGVPUEl2VGdBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # API server specific configuration options.\n    apiServer:\n        # Extra certificate subject alternative names for the API server's certificate.\n        certSANs:\n            - 146.190.3.99\n        \n        # # The container image used in the API server manifest.\n        # image: k8s.gcr.io/kube-apiserver:v1.23.1\n    # Controller manager server specific configuration options.\n    controllerManager: {}\n    # # The container image used in the controller manager manifest.\n    # image: k8s.gcr.io/kube-controller-manager:v1.23.1\n\n    # Kube-proxy server-specific configuration options\n    proxy: {}\n    # # The container image used in the kube-proxy manifest.\n    # image: k8s.gcr.io/kube-proxy:v1.23.1\n\n    # Scheduler server specific configuration options.\n    scheduler: {}\n    # # The container image used in the scheduler manifest.\n    # image: k8s.gcr.io/kube-scheduler:v1.23.1\n\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes: {}\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    # Etcd specific configuration options.\n    etcd:\n        # The `ca` is the root certificate authority of the PKI.\n        ca:\n            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNPZ0F3SUJBZ0lRWnEyUHV6TTNBVTJpN3B1SmdtbGlkekFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEl5TURVeE9EQXhNakV5TTFvWERUTXlNRFV4TlRBeE1qRXlNMW93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkc3ZWlMZ1Zsbm9jCmJXKzNoNis3elJLb1k4Y0kwUVp2dkFVL1VKa1FnQkNNckREZ0dRaGlTbXBKaGNXNExYOVRCbmJlMm9NeU5uZHkKeVRiOTVZdU9wQnlqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVdWlHQnhyekMvZG5pCkpWcUFjdTA4S2xndnQ5TXdDZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBTmZ6YytoR2JtQlRkZWhMNTlwU1g2V28KaHUrdGNpZDNzVklGc21zcWtXOTJBaUVBamJWaUtzbVlBekhSaVZhSkVBSU5DSVpLcjVxTnZ1SytwY1lRYWhXTwpUSW89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUlhb1MzZGlhZnE2ZlpkVUhoNG5UdTdxOW10R2JsTnJyQTU5aGVzbit5MVNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFYnQ2SXVCV1dlaHh0YjdlSHI3dk5FcWhqeHdqUkJtKzhCVDlRbVJDQUVJeXNNT0FaQ0dKSwpha21GeGJndGYxTUdkdDdhZ3pJMmQzTEpOdjNsaTQ2a0hBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n        \n        # # The container image used to create the etcd service.\n        # image: gcr.io/etcd-development/etcd:v3.5.1\n\n        # # The subnet from which the advertise URL should be.\n        # subnet: 10.0.0.0/8\n    # A list of urls that point to additional manifests.\n    extraManifests: []\n    #   - https://www.example.com/manifest1.yaml\n    #   - https://www.example.com/manifest2.yaml\n\n    # A list of inline Kubernetes manifests.\n    inlineManifests: []\n    #   - name: namespace-ci # Name of the manifest.\n    #     contents: |- # Manifest contents as a string.\n    #       apiVersion: v1\n    #       kind: Namespace\n    #       metadata:\n    #       \tname: ci\n\n    \n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: docker.io/coredns/coredns:1.8.7 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n",
            "content_base64": "",
            "filename": "./talos-config/controlplane.yaml",
            "id": "22eaaf2be893f41a9fbe5eea7b831ff55d5a71b5"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "worker",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true # Indicates whether to pull the machine config upon every boot.\n# Provides machine specific configuration options.\nmachine:\n    type: worker # Defines the role of the machine within the cluster.\n    token: b1byxv.w5ultb5aew1g20fb # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBLzd3WENPZFR6Vnp1OWpPRG52eEkwREFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qSXdOVEU0TURFeU1USXpXaGNOTXpJd05URTFNREV5TVRJeldqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUFnZk5TZ3p0S0NqYnVWemRtZFVuZUR1ZmZ1dFA5OGQ2R3VOCmRhUzQrL2srbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9uaC9PMUhQU2R4TlNIVApPN214cUJHRDQxSC9NQVVHQXl0bGNBTkJBUHRaeEZkM0tHRE9MSGI2bktjR1hFUXI0TFlTZnZWbFJwM3ZLNWVQCnFBRi9LUUJKeHQxTHU0ZWFYTHhheTQzZkF6L1RWTHFMVUlpZnBJbUpRaTdrSXd3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet: {}\n    # # The `image` field is an optional reference to an alternative kubelet image.\n    # image: ghcr.io/talos-systems/kubelet:v1.23.1\n\n    # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n    # clusterDNS:\n    #     - 10.96.0.10\n    #     - 169.254.2.53\n\n    # # The `extraArgs` field is used to provide additional flags to the kubelet.\n    # extraArgs:\n    #     key: value\n\n    # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n    # extraMounts:\n    #     - destination: /var/lib/example\n    #       type: bind\n    #       source: /var/lib/example\n    #       options:\n    #         - bind\n    #         - rshared\n    #         - rw\n\n    # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n    # nodeIP:\n    #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n    #     validSubnets:\n    #         - 10.0.0.0/8\n    #         - '!10.0.0.3/32'\n    #         - fdc7::/16\n\n    # Provides machine specific network configuration options.\n    network: {}\n    # # `interfaces` is used to define the network interface configuration.\n    # interfaces:\n    #     - interface: eth0 # The interface name.\n    #       # Assigns static IP addresses to the interface.\n    #       addresses:\n    #         - 192.168.2.0/24\n    #       # A list of routes associated with the interface.\n    #       routes:\n    #         - network: 0.0.0.0/0 # The route's network.\n    #           gateway: 192.168.2.1 # The route's gateway.\n    #           metric: 1024 # The optional metric for the route.\n    #       mtu: 1500 # The interface's MTU.\n    #       \n    #       # # Bond specific options.\n    #       # bond:\n    #       #     # The interfaces that make up the bond.\n    #       #     interfaces:\n    #       #         - eth0\n    #       #         - eth1\n    #       #     mode: 802.3ad # A bond option.\n    #       #     lacpRate: fast # A bond option.\n\n    #       # # Indicates if DHCP should be used to configure the interface.\n    #       # dhcp: true\n\n    #       # # DHCP specific options.\n    #       # dhcpOptions:\n    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n    #       # # Wireguard specific configuration.\n\n    #       # # wireguard server example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     listenPort: 51111 # Specifies a device's listening port.\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n    #       # # wireguard peer example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.\n    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n\n    #       # # Virtual (shared) IP address configuration.\n    #       # vip:\n    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.\n\n    # # Used to statically set the nameservers for the machine.\n    # nameservers:\n    #     - 8.8.8.8\n    #     - 1.1.1.1\n\n    # # Allows for extra entries to be added to the `/etc/hosts` file\n    # extraHostEntries:\n    #     - ip: 192.168.1.100 # The IP of the host.\n    #       # The host alias.\n    #       aliases:\n    #         - example\n    #         - example.domain.tld\n\n    # # Configures KubeSpan feature.\n    # kubespan:\n    #     enabled: true # Enable the KubeSpan feature.\n\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/sda # The disk used for installations.\n        image: ghcr.io/talos-systems/installer:v0.14.3 # Allows for supplying the image used to perform the installation.\n        bootloader: true # Indicates if a bootloader should be installed.\n        wipe: false # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n    \n    # # Provides machine specific contolplane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to partition, format and mount additional disks.\n\n    # # MachineDisks list example.\n    # disks:\n    #     - device: /dev/sdb # The name of the disk to use.\n    #       # A list of partitions to create on the disk.\n    #       partitions:\n    #         - mountpoint: /var/mnt/extra # Where to mount the partition.\n    #           \n    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n    #           # # Human readable representation.\n    #           # size: 100 MB\n    #           # # Precise value in bytes.\n    #           # size: 1073741824\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # Specifies time (NTP) servers to use for setting the system time.\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n\n    # # Used to configure the machine's container image registry mirrors.\n    # registries:\n    #     # Specifies mirror configuration for each registry.\n    #     mirrors:\n    #         ghcr.io:\n    #             # List of endpoints (URLs) for registry mirrors to use.\n    #             endpoints:\n    #                 - https://registry.insecure\n    #                 - https://ghcr.io/v2/\n    #     # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    #     config:\n    #         registry.insecure:\n    #             # The TLS configuration for the registry.\n    #             tls:\n    #                 insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #                 \n    #                 # # Enable mutual TLS authentication with the registry.\n    #                 # clientIdentity:\n    #                 #     crt: TFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVSklla05DTUhGLi4u\n    #                 #     key: TFMwdExTMUNSVWRKVGlCRlJESTFOVEU1SUZCU1NWWkJWRVVnUzBWWkxTMHRMUzBLVFVNLi4u\n    #             \n    #             # # The auth configuration for this registry.\n    #             # auth:\n    #             #     username: username # Optional registry authentication.\n    #             #     password: password # Optional registry authentication.\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n# Provides cluster specific configuration options.\ncluster:\n    id: KRpBFOXKOYFyWeKrWThhfujfzpZMN7ghUk8ecu4LYUA= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: nPrUis4++Ptk79og80oA1N+pgi/eT+i/XcZsW6NROLg= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://146.190.3.99:443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    # Provides cluster specific network configuration options.\n    network:\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n        \n        # # The CNI used.\n        # cni:\n        #     name: custom # Name of CNI to use.\n        #     # URLs containing manifests to apply for the CNI.\n        #     urls:\n        #         - https://raw.githubusercontent.com/cilium/cilium/v1.8/install/kubernetes/quick-install.yaml\n    token: h02u4e.v4y18yrkaexyp0cg # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    aescbcEncryptionSecret: \"\" # The key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n    #   # Decryption secret example (do not use in production!).\n    #   z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUp0RGNkd2FCUWNoUWVDeGJWQS9FMHN3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNakExTVRnd01USXhNak5hRncwek1qQTFNVFV3TVRJeApNak5hTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVI2Q25kWjJJNzFUbFpmNW83YVZmRWFhMzBZSWN4UXlsWUdKWkJpTXczVTJFb0NqUE5QcDBrRGpGaHAKTnZhMEd1VXc5dmFmR2N5bzF2MkxqMUJFUXM4QW8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGRXBTcExMWTE5ZnFOOVNNSHppWFhHUFkrd1RqTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUMyLzJQb0gKU0pvbTdTdkEvN29PK1lUZkVUT0tNK2YwZWtybXJkMG5HZ0djQWlFQXFMcnY4UXpUbXZVK3c3dXVxeDFvTlFyWQpXNEk4Zmh2bFNyWlo1dG9pY3IwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes: {}\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    \n    # # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n\n    # # AggregatorCA example.\n    # aggregatorCA:\n    #     crt: TFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVSklla05DTUhGLi4u\n    #     key: TFMwdExTMUNSVWRKVGlCRlJESTFOVEU1SUZCU1NWWkJWRVVnUzBWWkxTMHRMUzBLVFVNLi4u\n\n    # # The base64 encoded private key for service account token generation.\n\n    # # AggregatorCA example.\n    # serviceAccount:\n    #     key: TFMwdExTMUNSVWRKVGlCRlJESTFOVEU1SUZCU1NWWkJWRVVnUzBWWkxTMHRMUzBLVFVNLi4u\n\n    # # API server specific configuration options.\n    # apiServer:\n    #     image: k8s.gcr.io/kube-apiserver:v1.23.1 # The container image used in the API server manifest.\n    #     # Extra arguments to supply to the API server.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n    #         http2-max-streams-per-connection: \"32\"\n    #     # Extra certificate subject alternative names for the API server's certificate.\n    #     certSANs:\n    #         - 1.2.3.4\n    #         - 4.5.6.7\n\n    # # Controller manager server specific configuration options.\n    # controllerManager:\n    #     image: k8s.gcr.io/kube-controller-manager:v1.23.1 # The container image used in the controller manager manifest.\n    #     # Extra arguments to supply to the controller manager.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n\n    # # Kube-proxy server-specific configuration options\n    # proxy:\n    #     image: k8s.gcr.io/kube-proxy:v1.23.1 # The container image used in the kube-proxy manifest.\n    #     mode: ipvs # proxy mode of kube-proxy.\n    #     # Extra arguments to supply to kube-proxy.\n    #     extraArgs:\n    #         proxy-mode: iptables\n\n    # # Scheduler server specific configuration options.\n    # scheduler:\n    #     image: k8s.gcr.io/kube-scheduler:v1.23.1 # The container image used in the scheduler manifest.\n    #     # Extra arguments to supply to the scheduler.\n    #     extraArgs:\n    #         feature-gates: AllBeta=true\n\n    # # Etcd specific configuration options.\n    # etcd:\n    #     image: gcr.io/etcd-development/etcd:v3.5.1 # The container image used to create the etcd service.\n    #     # The `ca` is the root certificate authority of the PKI.\n    #     ca:\n    #         crt: TFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVSklla05DTUhGLi4u\n    #         key: TFMwdExTMUNSVWRKVGlCRlJESTFOVEU1SUZCU1NWWkJWRVVnUzBWWkxTMHRMUzBLVFVNLi4u\n    #     # Extra arguments to supply to etcd.\n    #     extraArgs:\n    #         election-timeout: \"5000\"\n    #     subnet: 10.0.0.0/8 # The subnet from which the advertise URL should be.\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: docker.io/coredns/coredns:1.8.7 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A list of urls that point to additional manifests.\n    # extraManifests:\n    #     - https://www.example.com/manifest1.yaml\n    #     - https://www.example.com/manifest2.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # A list of inline Kubernetes manifests.\n    # inlineManifests:\n    #     - name: namespace-ci # Name of the manifest.\n    #       contents: |- # Manifest contents as a string.\n    #         apiVersion: v1\n    #         kind: Namespace\n    #         metadata:\n    #         \tname: ci\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n",
            "content_base64": "",
            "filename": "./talos-config/worker.yaml",
            "id": "5d114eedad26a17c6593bc3c346b39f04cf9ebd1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_custom_image",
      "name": "talos",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2022-05-18T01:18:05Z",
            "description": "",
            "distribution": "Unknown",
            "id": "108499268",
            "image_id": 108499268,
            "min_disk_size": 7,
            "name": "talos",
            "public": false,
            "regions": [
              "sfo3"
            ],
            "size_gigabytes": 0.07,
            "slug": "",
            "status": "available",
            "tags": null,
            "type": "custom",
            "url": "https://github.com/antonleviathan/talos-image/raw/3879e5d8bfaaa1a8368f21b06abd1db64a8d2aa6/disk.raw"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_droplet",
      "name": "control-plane",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "backups": false,
            "created_at": "2022-05-18T01:21:24Z",
            "disk": 80,
            "droplet_agent": null,
            "graceful_shutdown": false,
            "id": "300222160",
            "image": "108499268",
            "ipv4_address": "164.92.127.248",
            "ipv4_address_private": "10.10.10.2",
            "ipv6": false,
            "ipv6_address": "",
            "locked": false,
            "memory": 4096,
            "monitoring": false,
            "name": "talos-control-plane-0",
            "price_hourly": 0.02976,
            "price_monthly": 20,
            "private_networking": true,
            "region": "sfo3",
            "resize_disk": true,
            "size": "s-2vcpu-4gb",
            "ssh_keys": [
              "c7:28:d5:da:ca:75:0a:06:f7:69:21:4d:56:6e:17:a7"
            ],
            "status": "active",
            "tags": [
              "talos-digital-ocean-tutorial-control-plane"
            ],
            "urn": "do:droplet:300222160",
            "user_data": "22eaaf2be893f41a9fbe5eea7b831ff55d5a71b5",
            "vcpus": 2,
            "volume_ids": [],
            "vpc_uuid": "5cd1cf9e-6f3f-45f2-8745-0373093c8229"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.local_file.controlplane",
            "digitalocean_custom_image.talos",
            "digitalocean_loadbalancer.public",
            "digitalocean_vpc.default"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "backups": false,
            "created_at": "2022-05-18T01:21:24Z",
            "disk": 80,
            "droplet_agent": null,
            "graceful_shutdown": false,
            "id": "300222162",
            "image": "108499268",
            "ipv4_address": "159.223.192.134",
            "ipv4_address_private": "10.10.10.4",
            "ipv6": false,
            "ipv6_address": "",
            "locked": false,
            "memory": 4096,
            "monitoring": false,
            "name": "talos-control-plane-1",
            "price_hourly": 0.02976,
            "price_monthly": 20,
            "private_networking": true,
            "region": "sfo3",
            "resize_disk": true,
            "size": "s-2vcpu-4gb",
            "ssh_keys": [
              "c7:28:d5:da:ca:75:0a:06:f7:69:21:4d:56:6e:17:a7"
            ],
            "status": "active",
            "tags": [
              "talos-digital-ocean-tutorial-control-plane"
            ],
            "urn": "do:droplet:300222162",
            "user_data": "22eaaf2be893f41a9fbe5eea7b831ff55d5a71b5",
            "vcpus": 2,
            "volume_ids": [],
            "vpc_uuid": "5cd1cf9e-6f3f-45f2-8745-0373093c8229"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.local_file.controlplane",
            "digitalocean_custom_image.talos",
            "digitalocean_loadbalancer.public",
            "digitalocean_vpc.default"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "backups": false,
            "created_at": "2022-05-18T01:21:24Z",
            "disk": 80,
            "droplet_agent": null,
            "graceful_shutdown": false,
            "id": "300222161",
            "image": "108499268",
            "ipv4_address": "159.223.192.186",
            "ipv4_address_private": "10.10.10.5",
            "ipv6": false,
            "ipv6_address": "",
            "locked": false,
            "memory": 4096,
            "monitoring": false,
            "name": "talos-control-plane-2",
            "price_hourly": 0.02976,
            "price_monthly": 20,
            "private_networking": true,
            "region": "sfo3",
            "resize_disk": true,
            "size": "s-2vcpu-4gb",
            "ssh_keys": [
              "c7:28:d5:da:ca:75:0a:06:f7:69:21:4d:56:6e:17:a7"
            ],
            "status": "active",
            "tags": [
              "talos-digital-ocean-tutorial-control-plane"
            ],
            "urn": "do:droplet:300222161",
            "user_data": "22eaaf2be893f41a9fbe5eea7b831ff55d5a71b5",
            "vcpus": 2,
            "volume_ids": [],
            "vpc_uuid": "5cd1cf9e-6f3f-45f2-8745-0373093c8229"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.local_file.controlplane",
            "digitalocean_custom_image.talos",
            "digitalocean_loadbalancer.public",
            "digitalocean_vpc.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_droplet",
      "name": "worker",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "backups": false,
            "created_at": "2022-05-18T01:21:56Z",
            "disk": 80,
            "droplet_agent": null,
            "graceful_shutdown": false,
            "id": "300222203",
            "image": "108499268",
            "ipv4_address": "164.92.123.123",
            "ipv4_address_private": "10.10.10.6",
            "ipv6": false,
            "ipv6_address": "",
            "locked": false,
            "memory": 4096,
            "monitoring": false,
            "name": "talos-worker-node-1",
            "price_hourly": 0.02976,
            "price_monthly": 20,
            "private_networking": true,
            "region": "sfo3",
            "resize_disk": true,
            "size": "s-2vcpu-4gb",
            "ssh_keys": [
              "c7:28:d5:da:ca:75:0a:06:f7:69:21:4d:56:6e:17:a7"
            ],
            "status": "active",
            "tags": null,
            "urn": "do:droplet:300222203",
            "user_data": "5d114eedad26a17c6593bc3c346b39f04cf9ebd1",
            "vcpus": 2,
            "volume_ids": [],
            "vpc_uuid": "5cd1cf9e-6f3f-45f2-8745-0373093c8229"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.local_file.controlplane",
            "data.local_file.worker",
            "digitalocean_custom_image.talos",
            "digitalocean_droplet.control-plane",
            "digitalocean_loadbalancer.public",
            "digitalocean_vpc.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_loadbalancer",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "algorithm": "round_robin",
            "disable_lets_encrypt_dns_records": false,
            "droplet_ids": [],
            "droplet_tag": "talos-digital-ocean-tutorial-control-plane",
            "enable_backend_keepalive": false,
            "enable_proxy_protocol": false,
            "forwarding_rule": [
              {
                "certificate_id": "",
                "certificate_name": "",
                "entry_port": 443,
                "entry_protocol": "tcp",
                "target_port": 6443,
                "target_protocol": "tcp",
                "tls_passthrough": false
              }
            ],
            "healthcheck": [
              {
                "check_interval_seconds": 10,
                "healthy_threshold": 5,
                "path": "",
                "port": 6443,
                "protocol": "tcp",
                "response_timeout_seconds": 5,
                "unhealthy_threshold": 3
              }
            ],
            "id": "116cd4af-7ff5-48f7-8c53-707fc3ebe37e",
            "ip": "146.190.3.99",
            "name": "loadbalancer-1",
            "redirect_http_to_https": false,
            "region": "sfo3",
            "size": null,
            "size_unit": 1,
            "status": "active",
            "sticky_sessions": [
              {
                "cookie_name": "",
                "cookie_ttl_seconds": 0,
                "type": "none"
              }
            ],
            "urn": "do:loadbalancer:116cd4af-7ff5-48f7-8c53-707fc3ebe37e",
            "vpc_uuid": "5cd1cf9e-6f3f-45f2-8745-0373093c8229"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_vpc.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_vpc",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2022-05-18 01:17:06 +0000 UTC",
            "default": false,
            "description": "",
            "id": "5cd1cf9e-6f3f-45f2-8745-0373093c8229",
            "ip_range": "10.10.10.0/24",
            "name": "deafult-sfo3",
            "region": "sfo3",
            "timeouts": null,
            "urn": "do:vpc:5cd1cf9e-6f3f-45f2-8745-0373093c8229"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "init-cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3697928276957842945",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.local_file.controlplane",
            "data.local_file.worker",
            "digitalocean_custom_image.talos",
            "digitalocean_droplet.control-plane",
            "digitalocean_droplet.worker",
            "digitalocean_loadbalancer.public",
            "digitalocean_vpc.default"
          ]
        }
      ]
    }
  ]
}
